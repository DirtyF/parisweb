#!/usr/bin/env ruby
require 'rubygems'
require 'slugify'
require 'bundler/setup'
require_relative '../lib/helper_download'
require_relative '../lib/helper_extract'
require_relative '../lib/helper_selector'

# Custom selector set to get all the record data from the HTML page
class Selector2006
  include HelperSelector

  def initialize
    @sessions_filepath = File.expand_path('./data/2006/sessions.html')
    @authors_filepath = File.expand_path('./data/2006/authors.html')
    @ressources_filepath = File.expand_path('./data/2006/ressources.html')
  end

  def sessions
    doc = Nokogiri::HTML(File.open(@sessions_filepath).read)

    sessions = []

    # Sessions
    titles = element(doc, 'dt[id]')
    titles.each do |title|
      text = title.text
      text = text.split(': ')[1..-1].join(': ')

      dd = title.next_element
      author = element(dd, 'a').text
      description = dd.text.tr("\n", ' ')

      url = 'https://www.paris-web.fr/2006/planning.html'
      anchor = title.attribute('id')
      url << "##{anchor}"

      sessions << {
        title: text,
        authors: author,
        description: description,
        type: 'conference',
        url: url,
        year: 2006
      }
    end

    sessions.reject! do |session|
      session[:authors].empty?
    end
  end

  def add_authors(sessions)
    doc = Nokogiri::HTML(File.open(@authors_filepath).read)
    authors = {}

    vcards = element(doc, 'div.vcard')
    vcards.each do |author|
      name = element(author, 'h2').text
      picture = attribute(author, 'img', 'src')
      picture = "http://www.paris-web.fr/2006/#{picture}"
      description = element(author, 'p').text
      authors[name] = {
        picture: picture,
        description: description
      }
    end

    sessions.map do |session|
      matching_author = authors[session[:authors]]
      session[:authors] = [{
        name: session[:authors],
        picture: matching_author[:picture],
        description: matching_author[:description]
      }]
      session
    end
  end

  def add_ressources(sessions)
    doc = Nokogiri::HTML(File.open(@ressources_filepath).read)

    slides = {}
    slide_links = element(doc, 'a[href$=pdf],a[href$="zip"],a[href$="ppt"]')
    slide_links.each do |link|
      url = link.attr('href')
      dd = link.ancestors('dd')[0]
      dt = dd.previous_element
      author = dt.text
      slides[author.slugify] = url
    end

    videos = {}
    slide_videos = element(doc, 'a[href^="http://ru3"]')[0..-2]
    slide_videos.each do |link|
      url = link.attr('href')
      dd = link.ancestors('dd')[0]
      dd = dd.previous_element while dd.previous_element.name != 'dt'
      dt = dd.previous_element
      author = dt.text
      videos[author.slugify] = url
    end

    sessions.each do |session|
      session[:ressources] = {
        slides: nil,
        video: nil
      }

      slug = session[:authors].map do |author|
        author[:name]
      end.join('-').slugify

      session[:ressources][:slides] = slides[slug] unless slides[slug].nil?
      session[:ressources][:video] = videos[slug] unless videos[slug].nil?
    end

    sessions
  end


  def run
    content = add_authors(sessions)
    content = add_ressources(content)
    ap content

    output = HelperPath.record('2006')
    FileUtils.mkdir_p(File.dirname(output))
    content = JSON.pretty_generate(content)
    File.write(output, content)
  end
end

Selector2006.new.run
